templates:
    1: &check
        hide_calculated: true
        type: integer
        subgrades:
            completely_correct: boolean
            mostly_correct: boolean
            insufficient: boolean
            checkpy: integer
        automatic:
            checkpy: correctness_score
        calculation: "[insufficient == -1 && 0 || -10, mostly_correct == -1 && 2 || -10, completely_correct == -1 && 3 || -10].max"

    2: &check-man
        hide_calculated: true
        type: integer
        subgrades:
            completely_correct: boolean
            mostly_correct: boolean
            insufficient: boolean
        calculation: "[insufficient == -1 && 0 || -10, mostly_correct == -1 && 2 || -10, completely_correct == -1 && 3 || -10].max"

    3: &testt
        type: pass
        subgrades:
            passed: boolean
            checkpy: integer
        automatic:
            checkpy: correctness_score
        calculation: passed
        hide_calculated: true

    4: &graded
        hide_calculated: true
        type: float
        subgrades:
            code_quality: integer
            correctness: integer
        calculation: "1.0 + 9.0 * (3.0 * correctness + 2.0 * code_quality - 5.0) / 20.0"

grades:
    algorithms_(level1):
        <<: *check
    text_(level2):
        <<: *check
    bigdata_(level3):
        <<: *check
    monopoly_(level4):
        <<: *check
    shakspeare_(level5):
        <<: *check-man
    survival_(level6): *check-man

    exam1:
        <<: *testt
    exam2:
        <<: *testt

sp_modules:
    show_progress: true
    submits:
        algorithms_(level1): 1
        text_(level2): 1
        bigdata_(level3): 1
        monopoly_(level4): 1
        shakspeare_(level5): 1
        survival_(level6): 1
    required: true
